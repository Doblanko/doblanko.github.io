(()=>{"use strict";var n={28:(n,r,e)=>{e.d(r,{Z:()=>s});var t=e(537),a=e.n(t),o=e(645),i=e.n(o)()(a());i.push([n.id,"* {\r\n  /* set all the margins to 0 by default */\r\n  margin: 0px;\r\n  padding: 0px;\r\n  font-family: sans-serif;\r\n}\r\n\r\nhtml,\r\nbody,\r\n.main-content {\r\n  /* fill the screen */\r\n  height: 100%;\r\n  min-width: 1000px !important;\r\n}\r\n\r\nhtml {\r\n  overflow-y: scroll;\r\n}\r\n\r\nbody {\r\n  background-image: radial-gradient(lightskyblue, #6495ed);\r\n}\r\n\r\n.main-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n\r\n  align-items: center;\r\n}\r\n\r\n/* - - - - - Header Container - - - - - */\r\n\r\n.header-container {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n}\r\n/* Title */\r\n.title-container {\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-size: 60px;\r\n  overflow-wrap: normal;\r\n}\r\n\r\n/* Form */\r\n.form-container {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n#search-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n\r\n  align-items: center;\r\n}\r\n\r\n#search-box {\r\n  height: 30px;\r\n  width: 33%;\r\n  box-sizing: border-box;\r\n\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  text-align: center;\r\n  margin: 10px;\r\n}\r\n\r\n#submit-btn {\r\n  height: 25px;\r\n  width: 75px;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n#submit-btn:hover {\r\n  opacity: 70%;\r\n}\r\n\r\n/* Weather Results Container */\r\n\r\n.weather-container {\r\n  width: 66%;\r\n\r\n  border-radius: 25px;\r\n  background-image: radial-gradient(rgb(248, 247, 247), lightgrey);\r\n  box-sizing: border-box;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n\r\n  padding: 25px;\r\n}\r\n\r\nh2 {\r\n  font-size: 45px;\r\n}\r\n\r\n.weather-data-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.weather-data-container-left {\r\n  width: 70%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.weather-data-container-right {\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.weather-data {\r\n  font-size: 20px;\r\n  margin-left: 15%;\r\n  margin-top: 10px;\r\n}\r\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,wCAAwC;EACxC,WAAW;EACX,YAAY;EACZ,uBAAuB;AACzB;;AAEA;;;EAGE,oBAAoB;EACpB,YAAY;EACZ,4BAA4B;AAC9B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,wDAAwD;AAC1D;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,sBAAsB;;EAEtB,mBAAmB;AACrB;;AAEA,yCAAyC;;AAEzC;EACE,WAAW;EACX,sBAAsB;EACtB,aAAa;AACf;AACA,UAAU;AACV;EACE,gBAAgB;EAChB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,qBAAqB;AACvB;;AAEA,SAAS;AACT;EACE,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,6BAA6B;;EAE7B,WAAW;EACX,sBAAsB;;EAEtB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,UAAU;EACV,sBAAsB;;EAEtB,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,YAAY;AACd;;AAEA,8BAA8B;;AAE9B;EACE,UAAU;;EAEV,mBAAmB;EACnB,gEAAgE;EAChE,sBAAsB;EACtB,0CAA0C;;EAE1C,aAAa;AACf;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,gBAAgB;AAClB",sourcesContent:["* {\r\n  /* set all the margins to 0 by default */\r\n  margin: 0px;\r\n  padding: 0px;\r\n  font-family: sans-serif;\r\n}\r\n\r\nhtml,\r\nbody,\r\n.main-content {\r\n  /* fill the screen */\r\n  height: 100%;\r\n  min-width: 1000px !important;\r\n}\r\n\r\nhtml {\r\n  overflow-y: scroll;\r\n}\r\n\r\nbody {\r\n  background-image: radial-gradient(lightskyblue, #6495ed);\r\n}\r\n\r\n.main-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n\r\n  align-items: center;\r\n}\r\n\r\n/* - - - - - Header Container - - - - - */\r\n\r\n.header-container {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n}\r\n/* Title */\r\n.title-container {\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  font-size: 60px;\r\n  overflow-wrap: normal;\r\n}\r\n\r\n/* Form */\r\n.form-container {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n#search-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n\r\n  align-items: center;\r\n}\r\n\r\n#search-box {\r\n  height: 30px;\r\n  width: 33%;\r\n  box-sizing: border-box;\r\n\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  text-align: center;\r\n  margin: 10px;\r\n}\r\n\r\n#submit-btn {\r\n  height: 25px;\r\n  width: 75px;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n#submit-btn:hover {\r\n  opacity: 70%;\r\n}\r\n\r\n/* Weather Results Container */\r\n\r\n.weather-container {\r\n  width: 66%;\r\n\r\n  border-radius: 25px;\r\n  background-image: radial-gradient(rgb(248, 247, 247), lightgrey);\r\n  box-sizing: border-box;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n\r\n  padding: 25px;\r\n}\r\n\r\nh2 {\r\n  font-size: 45px;\r\n}\r\n\r\n.weather-data-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.weather-data-container-left {\r\n  width: 70%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.weather-data-container-right {\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.weather-data {\r\n  font-size: 20px;\r\n  margin-left: 15%;\r\n  margin-top: 10px;\r\n}\r\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);t&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),r.push(c))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(i).concat([o]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},i=[],s=0;s<n.length;s++){var d=n[s],A=t.base?d[0]+t.base:d[0],c=o[A]||0,p="".concat(A," ").concat(c);o[A]=c+1;var l=e(p),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)r[l].references++,r[l].updater(u);else{var m=a(u,t);t.byIndex=s,r.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function a(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=e(o[i]);r[s].references--}for(var d=t(n,a),A=0;A<o.length;A++){var c=e(o[A]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}o=d}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var a=r[t];if(void 0!==a)return a.exports;var o=r[t]={id:t,exports:{}};return n[t](o,o.exports,e),o.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n=e(379),r=e.n(n),t=e(795),a=e.n(t),o=e(569),i=e.n(o),s=e(565),d=e.n(s),A=e(216),c=e.n(A),p=e(589),l=e.n(p),u=e(28),m={};m.styleTagTransform=l(),m.setAttributes=d(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=c(),r()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const h=()=>{const n=document.querySelector(".main-content"),r=document.createElement("div");r.classList.add("header-container");const e=document.createElement("div");e.classList.add("title-container");const t=document.createElement("h1");t.innerText="The Weather App",e.append(t),r.append(e);const a=document.createElement("div");a.classList.add("form-container");const o=document.createElement("form");o.setAttribute("id","search-form");const i=document.createElement("label");i.setAttribute("for","search-box"),i.innerHTML="Search Box",i.setAttribute("hidden","hidden"),o.append(i);const s=document.createElement("input");s.setAttribute("id","search-box"),s.setAttribute("name","search-box"),s.setAttribute("type","search"),s.setAttribute("placeholder","Enter City"),s.setAttribute("autocomplete","off"),o.append(s);const d=document.createElement("button");d.innerText="Submit",d.setAttribute("type","button"),d.classList.add("button"),d.setAttribute("id","submit-btn"),o.append(d),a.append(o),r.append(a),n.append(r);const A=document.createElement("div");A.classList.add("weather-container"),n.append(A)},E=n=>{document.querySelector(".weather-container").innerHTML="";const r=document.querySelector(".weather-container"),e=document.createElement("h2");e.innerText=n.cityName,r.append(e);const t=document.createElement("div");t.classList.add("weather-data-container");const a=document.createElement("div");a.classList.add("weather-data-container-left");const o=document.createElement("div");o.classList.add("weather-data-container-right");const i=document.createElement("div");i.classList.add("weather-data"),i.innerHTML=`<strong>Current:</strong> ${n.currTemp} &#176C`,a.append(i);const s=document.createElement("div");s.classList.add("weather-data"),s.innerHTML=`<strong>High:</strong> ${n.tempHigh} &#176C`,a.append(s);const d=document.createElement("div");d.classList.add("weather-data"),d.innerHTML=`<strong>Low:</strong> ${n.tempLow} &#176C`,a.append(d);const A=document.createElement("div");A.classList.add("weather-data"),A.innerHTML=`<strong>Wind:</strong> ${n.wind} km/hr ${n.windDir}`,o.append(A);const c=document.createElement("div");c.classList.add("weather-data"),c.innerHTML=`<strong>Condition:</strong> ${n.condition}`,o.append(c),t.append(a),t.append(o),r.append(t)},b=(()=>{const n=async n=>{const r=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=af005ed02e107d844f440f72136f435d`),e=await r.json();console.log(e),E((n=>{const r=n.name,e=Math.round(n.main.temp-273.15),t=Math.round(n.main.temp_max-273.15),a=Math.round(n.main.temp_min-273.15),o=Math.round(3.6*n.wind.speed);return console.log(Math.floor(n.wind.deg/22.5)),{cityName:r,currTemp:e,tempHigh:t,tempLow:a,wind:o,windDir:["N","NE","NE","E","E","SE","SE","S","S","SW","SW","W","W","NW","NW","N"][Math.floor(n.wind.deg/22.5)],condition:n.weather[0].description}})(e))};return{initializeView:()=>{document.getElementById("search-box").addEventListener("keypress",(r=>{"Enter"===r.key&&(r.preventDefault(),n(document.forms["search-form"]["search-box"].value))})),document.getElementById("submit-btn").addEventListener("click",(()=>{n(document.forms["search-form"]["search-box"].value)}))},searchWeather:n}})();(()=>{const n=document.querySelector("body"),r=document.createElement("div");r.classList.add("main-content"),n.append(r),h(),b.initializeView(),b.searchWeather("Edmonton")})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,